#!/bin/bash
# tv: tree view
# Copyright (c) 2024 Bluenetics GmbH
# SPDX-License-Identifier: Apache-2.0

#===============================================================================
# tv -?   # show usage
#===============================================================================

   if [ "$*" == "-?" ] || [ "$*" == "--?" ] || [ "$*" == "--help" ]; then
      ec -g "usage: (tree view, version `tv --version`)"
      if [ "$*" == "--?" ] || [ "$*" == "--help" ]; then
         ec -y "help on tree:"
         echo '  tree --dirsfirst -a -L 2       # max 2 levels, all files, dirs first'
         echo '  tree --dirsfirst -a -L 2 <dir> # max 2 levels, all files, dirs first'
         ec -y 'usage: tv [-123?] [--<opt>] [<dir>] # tree view'
      fi
      echo '   tv            # tree view, show max 2 levels, all files, dirs first'
      echo '   tv <dir>      # tree view, show max 2 levels, all files, dirs first'
      echo '   tv -3         # show max 3 tree levels, all files, dirs first'
      echo '   tv -3 <dir>   # show max 3 tree levels, all files, dirs first'
      echo '   tv -?         # show usage'
      echo '   tv --version  # print version'
      echo '   tv --help     # comprehensive help'
      echo '   see also: tree'
      exit 0
   fi

#===============================================================================
# tv --version  # print version
#===============================================================================

   if [ "$*" == "--version" ] || [ "$*" == "--v" ]; then
      echo "1.0.3"; exit 0
   fi

#===============================================================================
# tv ---is-linux (this clause must be located before next clause !!!)
#===============================================================================

   if [ "$1" == "---is-linux" ]; then
      if [ -f "/etc/os-release" ]; then
         exit 0   # running on Linux
      fi
      exit 1      # not on Linux
   fi

#===============================================================================
# tv ---is-macos
#===============================================================================

   if [ "$1" == "---is-macos" ]; then
      if [ "$(uname)" == "Darwin" ]; then
         exit 0   # running on MacOs Darwin
      fi
      exit 1      # not on MacOs
   fi

#===============================================================================
# check whether tree is installed and offer installation
#===============================================================================

   if [ "`which tv`" !=  "" ] && [ "`which tree`" == "" ]; then
      echo 'tree is not installed'

      ERR="0"
      tv ---is-linux || ERR="1"   # only for Linux
      if [ "$ERR" == "0" ]; then
         read -p "shall I install tree [Y/n]?" ANS
	   	   if [ "$ANS" == "Y" ] || [ "$ANS" == "y" ] || [ "$ANS" == "" ]; then
            echo 'sudo apt install tree'
            sudo apt install tree || exit 1
		     fi
         exit 0
      fi

      ERR="0"
      tv ---is-macos || ERR="1"   # only for MacOS
      if [ "$ERR" == "0" ]; then
         read -p "shall I install tree [Y/n]?" ANS
	   	   if [ "$ANS" == "Y" ] || [ "$ANS" == "y" ] || [ "$ANS" == "" ]; then
            echo 'brew install tree'
            brew install tree || exit 1
		     fi
         exit 0
      fi

      echo 'please install tree first!'
      exit 1
   fi

#===============================================================================
# tv -2   # show max 2 levels
#===============================================================================

   if [ "$1" == "-1" ]; then
      shift
      tree --dirsfirst -a -L 1 $*
      exit 0
   fi

   if [ "$1" == "-2" ]; then
      shift
      tree --dirsfirst -a -L 2 $*
      exit 0
   fi

   if [ "$1" == "-3" ]; then
      shift
      tree --dirsfirst -a -L 3 $*
      exit 0
   fi

#===============================================================================
# tv  # standard call
#===============================================================================

   if [ "$*" == "" ] || [ "$*" != "" ]; then
      tree --dirsfirst -a -L 2 $* || exit 1
      exit 0
   fi

#===============================================================================
# tv  <path> # standard call
#===============================================================================

   if [ "$*" != "" ]; then
      tree $* || exit 1
      exit 0
   fi

#===============================================================================
# tv -!   # install in a system binary directory
#===============================================================================

   if [ "$*" == "-!" ]; then
      if [ ! -f ~tv ]; then
         bash ~tv ---r "error: tv -!" >&2
         echo      "       file ~tv not found!" >&2
         exit 1
      fi
      chmod +x ~tv

      bash ~tv ---y "select target directory for installation of tv:"
      LIST=`bash ~tv ---directories`
	    select DIR in $LIST
	    do
         if [ "$DIR" == "" ]; then  # quit
            exit 0
         fi
         ERR="0"
         touch $DIR/_junk_ >/dev/null || ERR="1"
         rm -f $DIR/_junk_ >/dev/null

         bash ~tv ---g "=== installing tv in $DIR ..."
         if [ "$ERR" == "0" ]; then       # no write protection
            bash ~tv ---y "  cp ~tv $DIR/tv"
            cp ~tv $DIR/tv || exit 1
         else                             # write protection
            bash ~tv ---y "  this is a protected directory which uses a password!"
            bash ~tv ---y "  sudo cp ~tv $DIR/tv"
            sudo cp ~tv $DIR/tv || exit 1
         fi
         bash ~tv ---g "=== sucessful installation of tv"
         echo '  => enter: tv -?   # to see usage'

         rm -f ~tv                      # cleanup
 	       exit 0
	    done
      exit 0
   fi

#===============================================================================
# tv ---directories   # generate list of install directories
#===============================================================================

   if [ "$*" == "---directories" ]; then
      LIST=''
      for CHUNK in $(echo "$PATH" | sed 's/:/ /g')
      do
         LIST="$LIST $CHUNK"
      done
      echo $LIST
      exit 0
   fi

#===============================================================================
# helper: tv ---r 'text arg'   # internal helper: echo in red color
#         tv ---g 'text arg'   # internal helper: echo in green color
#         tv ---y 'text arg'   # internal helper: echo in yellow color
#===============================================================================

   if [ "$1" == "---r" ]; then
      printf "\x1b[31m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

   if [ "$1" == "---g" ]; then
      printf "\x1b[32m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

   if [ "$1" == "---y" ]; then
      printf "\x1b[33m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

   if [ "$1" == "---m" ]; then
      printf "\x1b[35m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

   if [ "$1" == "---c" ]; then
      printf "\x1b[36m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

#===============================================================================
# cannot deal with anything else ...
#===============================================================================

   tv -?
   exit 1
